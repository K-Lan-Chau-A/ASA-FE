import { useState, useEffect } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { AuroraBackground } from '@/components/ui/aurora-background'
import { AuroraBackground2 } from '@/components/ui/aurora-background2'
import { MacbookScroll } from '@/components/ui/macbook-scroll'
import { IphoneScroll } from '@/components/ui/iphone16-pro'

const ProductsPage = () => {
  const [activeTab, setActiveTab] = useState('web')

  // Read URL parameters on component mount
  useEffect(() => {
    const urlParams = new URLSearchParams(window.location.search)
    const tabParam = urlParams.get('tab')
    
    // Validate tab parameter and set if valid
    if (tabParam && ['web', 'desktop', 'mobile'].includes(tabParam)) {
      setActiveTab(tabParam)
    }

    // Handle browser back/forward buttons
    const handlePopState = (event) => {
      const urlParams = new URLSearchParams(window.location.search)
      const tabParam = urlParams.get('tab')
      
      if (tabParam && ['web', 'desktop', 'mobile'].includes(tabParam)) {
        setActiveTab(tabParam)
      } else {
        setActiveTab('web')
      }
    }

    window.addEventListener('popstate', handlePopState)
    
    // Cleanup event listener
    return () => {
      window.removeEventListener('popstate', handlePopState)
    }
  }, [])

  // Function to handle tab change and update URL
  const handleTabChange = (tab) => {
    setActiveTab(tab)
    
    // Update URL without page reload
    const newUrl = `${window.location.pathname}?tab=${tab}`
    window.history.pushState({ tab }, '', newUrl)
  }

  const products = {
    web: {
      title: "Web POS - Qu·∫£n l√Ω b√°n h√†ng tr√™n tr√¨nh duy·ªát",
      description: "Giao di·ªán b√°n h√†ng t·ªëi ∆∞u cho m√°y t√≠nh, tablet. K·∫øt n·ªëi tr·ª±c ti·∫øp v·ªõi ph·∫ßn c·ª©ng POS.",
      features: [
        "Giao di·ªán t·ªëi ∆∞u cho m√†n h√¨nh l·ªõn",
        "K·∫øt n·ªëi m√°y in h√≥a ƒë∆°n, qu√©t m√£ v·∫°ch",
        "Qu·∫£n l√Ω nhi·ªÅu ca l√†m vi·ªác",
        "B√°o c√°o real-time",
        "H·ªó tr·ª£ offline mode",
        "T√≠ch h·ª£p thanh to√°n ƒëa d·∫°ng"
      ],
      image: "üíª",
      color: "from-blue-500 to-cyan-500"
    },
    desktop: {
      title: "Desktop App - ·ª®ng d·ª•ng m√°y t√≠nh chuy√™n nghi·ªáp", 
      description: "Ph·∫ßn m·ªÅm c√†i ƒë·∫∑t tr√™n Windows/Mac v·ªõi hi·ªáu nƒÉng cao, t√≠ch h·ª£p s√¢u v·ªõi h·ªá th·ªëng.",
      features: [
        "Hi·ªáu nƒÉng cao, x·ª≠ l√Ω nhanh",
        "T√≠ch h·ª£p s√¢u v·ªõi Windows/Mac",
        "H·ªó tr·ª£ nhi·ªÅu m√†n h√¨nh",
        "Backup d·ªØ li·ªáu t·ª± ƒë·ªông",
        "B·∫£o m·∫≠t n√¢ng cao",
        "Ho·∫°t ƒë·ªông ho√†n to√†n offline"
      ],
      image: "üñ•Ô∏è",
      color: "from-purple-500 to-indigo-500"
    },
    mobile: {
      title: "Mobile App - Qu·∫£n l√Ω di ƒë·ªông m·ªçi l√∫c m·ªçi n∆°i",
      description: "·ª®ng d·ª•ng di ƒë·ªông cho iOS/Android, theo d√µi kinh doanh real-time t·ª´ b·∫•t c·ª© ƒë√¢u.",
      features: [
        "Theo d√µi doanh thu real-time",
        "Qu·∫£n l√Ω kho h√†ng di ƒë·ªông",
        "Notifications th√¥ng minh",
        "Ph√¢n t√≠ch AI insights",
        "Qu√©t m√£ v·∫°ch b·∫±ng camera",
        "ƒê·ªìng b·ªô ƒëa thi·∫øt b·ªã"
      ],
      image: "üì±",
      color: "from-emerald-500 to-teal-500"
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#009DA5]/5 to-[#0D6CE8]/5">
      {/* Header */}
      <AuroraBackground className="pt-16 py-12 text-slate-900 relative z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h1 className="text-4xl font-bold text-slate-900 mb-4 drop-shadow-lg">
            S·∫£n ph·∫©m c·ªßa ch√∫ng t√¥i
          </h1>
          <p className="text-lg text-slate-700 max-w-3xl mx-auto drop-shadow-md">
            H·ªá sinh th√°i ho√†n ch·ªânh cho m·ªçi nhu c·∫ßu qu·∫£n l√Ω b√°n h√†ng: t·ª´ Web, Desktop ƒë·∫øn Mobile App
          </p>
        </div>
      </AuroraBackground>

      {/* MacBook Scroll Section */}
      <AuroraBackground2 className="relative -mt-60">
        <MacbookScroll
          src="/logoASA.png"
        />
      </AuroraBackground2>

      {/* iPhone Scroll Section - ƒë∆∞a l√™n s√°t MacBook */}
      <AuroraBackground2 className="relative -mt-60">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <IphoneScroll
            src="/mobileApp.png" 
          />
        </div>
      </AuroraBackground2>

      {/* Kho·∫£ng tr·∫Øng ƒë·ªÉ xem ·∫£nh di chuy·ªÉn ra ngo√†i */}
      <div className="h-96"></div>
    </div>
  )
}

export default ProductsPage
